{"ast":null,"code":"var _jsxFileName = \"/Users/henrocun/emotionsAI_frontend/src/TranscribeVoice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TranscribeVoice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscribeVoice = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleTranscribe = () => {\n    if (selectedFile) {\n      // Add your audio file transcription logic here\n      // Example: process the selectedFile and get the transcription result\n      // Here, it's just a placeholder logic\n      const transcriptionResult = \"Transcribed text from audio file\";\n      setOutputText(transcriptionResult);\n    } else {\n      setOutputText(inputText);\n    }\n  };\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleSaveToDiary = () => {\n    // Add your save to diary logic here\n    alert('Saved to diary!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcribe-voice-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usage-limit\",\n      children: \"Unlimited Transcribes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          placeholder: \"Enter text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-count\",\n          children: [\"Words \", inputText.split(' ').filter(Boolean).length, \"/400\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-2\",\n          children: \"MP3/WAV files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".mp3,.wav\",\n          onChange: handleFileChange,\n          id: \"file-upload\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"upload-button\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTranscribe,\n        className: \"transcribe-button\",\n        children: \"Transcribe \\u2794\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"output-textarea\",\n          value: outputText,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveToDiary,\n          className: \"save-diary-button\",\n          children: \"Save to Diary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(TranscribeVoice, \"VlTZUTNvI0YYF2Fg49YA84xYHTM=\");\n_c = TranscribeVoice;\nexport default TranscribeVoice;\nvar _c;\n$RefreshReg$(_c, \"TranscribeVoice\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TranscribeVoice","_s","inputText","setInputText","outputText","setOutputText","selectedFile","setSelectedFile","handleTranscribe","transcriptionResult","handleFileChange","e","target","files","handleSaveToDiary","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","split","filter","Boolean","length","type","accept","id","style","display","htmlFor","onClick","readOnly","_c","$RefreshReg$"],"sources":["/Users/henrocun/emotionsAI_frontend/src/TranscribeVoice.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TranscribeVoice.css';\n\nconst TranscribeVoice = () => {\n    const [inputText, setInputText] = useState('');\n    const [outputText, setOutputText] = useState('');\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const handleTranscribe = () => {\n        if (selectedFile) {\n            // Add your audio file transcription logic here\n            // Example: process the selectedFile and get the transcription result\n            // Here, it's just a placeholder logic\n            const transcriptionResult = \"Transcribed text from audio file\";\n            setOutputText(transcriptionResult);\n        } else {\n            setOutputText(inputText);\n        }\n    };\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleSaveToDiary = () => {\n        // Add your save to diary logic here\n        alert('Saved to diary!');\n    };\n\n    return (\n        <div className=\"transcribe-voice-container\">\n            <div className=\"usage-limit\">Unlimited Transcribes</div>\n            <div className=\"input-output-container\">\n                <div className=\"input-container\">\n                    <label>Input</label>\n                    <textarea \n                        value={inputText}\n                        onChange={(e) => setInputText(e.target.value)}\n                        placeholder=\"Enter text\"\n                    />\n                    <div className=\"word-count\">Words {inputText.split(' ').filter(Boolean).length}/400</div>\n                    <div className=\"word-2\">MP3/WAV files</div>\n                    <input \n                        type=\"file\" \n                        accept=\".mp3,.wav\" \n                        onChange={handleFileChange} \n                        id=\"file-upload\" \n                        style={{ display: 'none' }}\n                    />\n                    <label htmlFor=\"file-upload\" className=\"upload-button\">\n                        Upload\n                    </label>\n                </div>\n                <button \n                    onClick={handleTranscribe}\n                    className=\"transcribe-button\"\n                >\n                    Transcribe âž”\n                </button>\n                <div className=\"output-container\">\n                    <label>Output</label>\n                    <textarea \n                        className='output-textarea'\n                        value={outputText}\n                        readOnly\n                    />\n                    <button \n                        onClick={handleSaveToDiary}\n                        className=\"save-diary-button\"\n                    >\n                        Save to Diary\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TranscribeVoice;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}