{"ast":null,"code":"var _jsxFileName = \"/Users/henrocun/emotionsAI_frontend/src/TranscribeVoice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TranscribeVoice.css';\nimport PaidNavbar from './PaidNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscribeVoice = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleTranscribe = () => {\n    if (selectedFile) {\n      // Add your audio file transcription logic here\n      // Example: process the selectedFile and get the transcription result\n      // Here, it's just a placeholder logic\n      const transcriptionResult = \"Transcribed text from audio file\";\n      setOutputText(transcriptionResult);\n    } else {\n      setOutputText(inputText);\n    }\n  };\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleSaveToDiary = () => {\n    // Add your save to diary logic here\n    alert('Saved to diary!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcribeVoicePage\",\n    children: [/*#__PURE__*/_jsxDEV(PaidNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcribeVoiceContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcribeVoiceUsageLimit\",\n        children: \"Unlimited Transcribes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcribeVoiceInputOutputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcribeVoiceInputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputText,\n            onChange: e => setInputText(e.target.value),\n            placeholder: \"Enter text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcribeVoiceWordCount\",\n            children: [\"Words \", inputText.split(' ').filter(Boolean).length, \"/400\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcribeVoiceFileInfo\",\n            children: \"MP3/WAV files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".mp3,.wav\",\n            onChange: handleFileChange,\n            id: \"file-upload\",\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"transcribeVoiceUploadButton\",\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTranscribe,\n          className: \"transcribeVoiceTranscribeButton\",\n          children: \"Transcribe \\u2794\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcribeVoiceOutputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"transcribeVoiceOutputTextarea\",\n            value: outputText,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveToDiary,\n            className: \"transcribeVoiceSaveDiaryButton\",\n            children: \"Save to Diary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(TranscribeVoice, \"VlTZUTNvI0YYF2Fg49YA84xYHTM=\");\n_c = TranscribeVoice;\nexport default TranscribeVoice;\nvar _c;\n$RefreshReg$(_c, \"TranscribeVoice\");","map":{"version":3,"names":["React","useState","PaidNavbar","jsxDEV","_jsxDEV","TranscribeVoice","_s","inputText","setInputText","outputText","setOutputText","selectedFile","setSelectedFile","handleTranscribe","transcriptionResult","handleFileChange","e","target","files","handleSaveToDiary","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","split","filter","Boolean","length","type","accept","id","style","display","htmlFor","onClick","readOnly","_c","$RefreshReg$"],"sources":["/Users/henrocun/emotionsAI_frontend/src/TranscribeVoice.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TranscribeVoice.css';\nimport PaidNavbar from './PaidNavbar';\n\nconst TranscribeVoice = () => {\n    const [inputText, setInputText] = useState('');\n    const [outputText, setOutputText] = useState('');\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const handleTranscribe = () => {\n        if (selectedFile) {\n            // Add your audio file transcription logic here\n            // Example: process the selectedFile and get the transcription result\n            // Here, it's just a placeholder logic\n            const transcriptionResult = \"Transcribed text from audio file\";\n            setOutputText(transcriptionResult);\n        } else {\n            setOutputText(inputText);\n        }\n    };\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleSaveToDiary = () => {\n        // Add your save to diary logic here\n        alert('Saved to diary!');\n    };\n\n    return (\n        <div className=\"transcribeVoicePage\">\n            <PaidNavbar />\n            <div className=\"transcribeVoiceContent\">\n                <div className=\"transcribeVoiceUsageLimit\">Unlimited Transcribes</div>\n                <div className=\"transcribeVoiceInputOutputContainer\">\n                    <div className=\"transcribeVoiceInputContainer\">\n                        <label>Input</label>\n                        <textarea \n                            value={inputText}\n                            onChange={(e) => setInputText(e.target.value)}\n                            placeholder=\"Enter text\"\n                        />\n                        <div className=\"transcribeVoiceWordCount\">Words {inputText.split(' ').filter(Boolean).length}/400</div>\n                        <div className=\"transcribeVoiceFileInfo\">MP3/WAV files</div>\n                        <input \n                            type=\"file\" \n                            accept=\".mp3,.wav\" \n                            onChange={handleFileChange} \n                            id=\"file-upload\" \n                            style={{ display: 'none' }}\n                        />\n                        <label htmlFor=\"file-upload\" className=\"transcribeVoiceUploadButton\">\n                            Upload\n                        </label>\n                    </div>\n                    <button \n                        onClick={handleTranscribe}\n                        className=\"transcribeVoiceTranscribeButton\"\n                    >\n                        Transcribe âž”\n                    </button>\n                    <div className=\"transcribeVoiceOutputContainer\">\n                        <label>Output</label>\n                        <textarea \n                            className=\"transcribeVoiceOutputTextarea\"\n                            value={outputText}\n                            readOnly\n                        />\n                        <button \n                            onClick={handleSaveToDiary}\n                            className=\"transcribeVoiceSaveDiaryButton\"\n                        >\n                            Save to Diary\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TranscribeVoice;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}