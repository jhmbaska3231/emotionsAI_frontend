{"ast":null,"code":"var _jsxFileName = \"/Users/henrocun/emotionsAI_frontend/src/TranscribeText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TranscribeText.css';\nimport PaidNavbar from './PaidNavbar';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptionApp = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const [usageCount, setUsageCount] = useState(0);\n  const usageLimit = 3;\n  const handleTranscribe = () => {\n    if (usageCount < usageLimit) {\n      // Add your transcription logic here\n      setOutputText(inputText); // This is a placeholder, replace with actual transcription logic\n      setUsageCount(usageCount + 1);\n    } else {\n      alert('Usage limit reached');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transcription-app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usage-limit\",\n      children: [\"Usage Limit \", usageCount, \"/\", usageLimit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-output-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          placeholder: \"Enter text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-count\",\n          children: [\"Words \", inputText.split(' ').filter(Boolean).length, \"/280\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTranscribe,\n        className: \"transcribe-button\",\n        disabled: usageCount >= usageLimit,\n        children: \"Transcribe \\u2794\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: outputText,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(TranscriptionApp, \"YU9lc72aKAmqMD2/dlVfYhvVmIM=\");\n_c = TranscriptionApp;\nexport default TranscriptionApp;\nvar _c;\n$RefreshReg$(_c, \"TranscriptionApp\");","map":{"version":3,"names":["React","useState","PaidNavbar","Footer","jsxDEV","_jsxDEV","TranscriptionApp","_s","inputText","setInputText","outputText","setOutputText","usageCount","setUsageCount","usageLimit","handleTranscribe","alert","className","children","Navbar","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","split","filter","Boolean","length","onClick","disabled","readOnly","_c","$RefreshReg$"],"sources":["/Users/henrocun/emotionsAI_frontend/src/TranscribeText.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TranscribeText.css';\nimport PaidNavbar from './PaidNavbar';\nimport Footer from './Footer';\n\n\nconst TranscriptionApp = () => {\n    const [inputText, setInputText] = useState('');\n    const [outputText, setOutputText] = useState('');\n    const [usageCount, setUsageCount] = useState(0);\n    const usageLimit = 3;\n\n    const handleTranscribe = () => {\n        if (usageCount < usageLimit) {\n            // Add your transcription logic here\n            setOutputText(inputText); // This is a placeholder, replace with actual transcription logic\n            setUsageCount(usageCount + 1);\n        } else {\n            alert('Usage limit reached');\n        }\n    };\n\n    return (\n        <div className=\"transcription-app-container\">\n            <Navbar />\n            <div className=\"usage-limit\">Usage Limit {usageCount}/{usageLimit}</div>\n            <div className=\"input-output-container\">\n                <div className=\"input-container\">\n                    <label>Input</label>\n                    <textarea \n                        value={inputText}\n                        onChange={(e) => setInputText(e.target.value)}\n                        placeholder=\"Enter text\"\n                    />\n                    <div className=\"word-count\">Words {inputText.split(' ').filter(Boolean).length}/280</div>\n                </div>\n                <button \n                    onClick={handleTranscribe}\n                    className=\"transcribe-button\"\n                    disabled={usageCount >= usageLimit}\n                >\n                    Transcribe âž”\n                </button>\n                <div className=\"output-container\">\n                    <label>Output</label>\n                    <textarea \n                        value={outputText}\n                        readOnly\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TranscriptionApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}